{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Alpha Minion",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:8888",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "Endpoints to manage users"
    },
    {
      "name": "People",
      "description": "Endpoints to manage people"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/authenticate": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to authenticate user",
        "parameters": [
          {
            "$ref": "#/components/schemas/users/reqBody"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/components/usersResponses200"
            }
          },
          "401": {
            "description": "Incorrect credentials",
            "schema": {
              "$ref": "#/components/usersResponses401"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/components/error500"
            }
          }
        }
      }
    },
    "/people": {
      "get": {
        "tags": [
          "People"
        ],
        "description": "Endpoint to get all records",
        "parameters": [
          {
            "$ref": "#/components/schemas/people/authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/components/peopleResponses200"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/components/error401"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/components/error500"
            }
          }
        }
      },
      "post": {
        "tags": [
          "People"
        ],
        "description": "Endpoint to create a new personal record",
        "parameters": [
          {
            "$ref": "#/components/schemas/people/authorization"
          },
          {
            "$ref": "#/components/schemas/people/reqBody"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/components/peopleResponses200"
            }
          },
          "400": {
            "description": "Incorrect or missing parameters",
            "schema": {
              "$ref": "#/components/peopleResponses400"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/components/error401"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/components/error500"
            }
          }
        }
      },
      "put": {
        "tags": [
          "People"
        ],
        "description": "Endpoint for updating a record",
        "parameters": [
          {
            "$ref": "#/components/schemas/people/authorization"
          },
          {
            "$ref": "#/components/schemas/people/reqBody"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/components/peopleResponses200"
            }
          },
          "400": {
            "description": "Incorrect or missing parameters",
            "schema": {
              "$ref": "#/components/peopleResponses400"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/components/error401"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/components/error500"
            }
          }
        }
      }
    },
    "/people/{id}": {
      "delete": {
        "tags": [
          "People"
        ],
        "description": "Endpoint to delete a record",
        "parameters": [
          {
            "$ref": "#/components/schemas/people/authorization"
          },
          {
            "$ref": "#/components/schemas/people/idParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/components/peopleResponses200"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/components/error401"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/components/error500"
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "people": {
        "reqBody": {
          "name": "object",
          "in": "body",
          "description": "Personal registration information",
          "required": true,
          "schema": {
            "properties": {
              "full_name": {
                "type": "string",
                "example": "Full name"
              },
              "email": {
                "type": "string",
                "example": "name@mail.com"
              },
              "password": {
                "type": "string",
                "example": "***"
              }
            }
          }
        },
        "responses200": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "types": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "uuid"
                  },
                  "full_name": {
                    "type": "string",
                    "example": "Full name"
                  }
                }
              }
            },
            "status": {
              "type": "number",
              "example": 200
            }
          }
        },
        "responses400": {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "example": [
                "Incorrect or missing parameters"
              ],
              "items": {
                "type": "string"
              }
            },
            "status": {
              "type": "number",
              "example": 400
            }
          }
        },
        "idParameter": {
          "name": "id",
          "in": "path",
          "description": "Id of the record to be deleted",
          "required": true,
          "type": "string"
        },
        "authorization": {
          "name": "authorization",
          "in": "header",
          "description": "User token",
          "required": true,
          "type": "string"
        }
      },
      "users": {
        "reqBody": {
          "name": "object",
          "in": "body",
          "description": "User email and password",
          "required": true,
          "schema": {
            "properties": {
              "email": {
                "type": "string",
                "example": "name@mail.com"
              },
              "password": {
                "type": "string",
                "example": "***"
              }
            }
          }
        },
        "responses200": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "uuid"
                },
                "full_name": {
                  "type": "string",
                  "example": "Full name"
                },
                "token": {
                  "type": "string",
                  "example": "token"
                }
              }
            },
            "status": {
              "type": "number",
              "example": 200
            }
          }
        },
        "responses401": {
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "example": [
                "Incorrect credentials"
              ],
              "items": {
                "type": "string"
              }
            },
            "status": {
              "type": "number",
              "example": 401
            }
          }
        }
      }
    },
    "peopleResponses200": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "types": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "uuid"
              },
              "full_name": {
                "type": "string",
                "example": "Full name"
              }
            }
          }
        },
        "status": {
          "type": "number",
          "example": 200
        }
      }
    },
    "peopleResponses400": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "example": [
            "Incorrect or missing parameters"
          ],
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "number",
          "example": 400
        }
      }
    },
    "usersResponses200": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "uuid"
            },
            "full_name": {
              "type": "string",
              "example": "Full name"
            },
            "token": {
              "type": "string",
              "example": "token"
            }
          }
        },
        "status": {
          "type": "number",
          "example": 200
        }
      }
    },
    "usersResponses401": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "example": [
            "Incorrect credentials"
          ],
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "number",
          "example": 401
        }
      }
    },
    "error401": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "example": [
            "Unauthorized"
          ],
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "number",
          "example": 401
        }
      }
    },
    "error500": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "example": [
            "Internal server error"
          ],
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "number",
          "example": 500
        }
      }
    }
  }
}